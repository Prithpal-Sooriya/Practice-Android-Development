Add Network Code

Plan: Connect app over the network to the OpenWeatherMapService

NOTE: open weather map requires you to have an API key
http://openweathermap.org/appid

OpenWeatherMap
  Free weather data and forecast API
  Website: http://openweathermap.org/API
  Contains great documentation
    User friendly description of the weather

Web queries
  With OpenWeatherMap, you can see the different queries that you can make
  Contains example queries that you can look through
    Get a understanding of the queries and API

HTTP request for weather
  1) make HTTP request
    pass the URL that we have created in the research:
      api.openweathermap.org/data/2.5/forecast/daily?q=Bristol,GB&mode=json&units=metric&cnt=7&APPID=...

  2) read the response from an input stream
    The response is in JSON format (so will get a JSON string)
      so we read this and get the data we need

  3) clean up and log errors
    disconnecting connection
    closing any input streams
    log errors if they occur/are caught

Http Requests
  To send/receive data over a connection, there are 2 clients on android:
    HttpURLConnection (newer-ish)
      USE THIS: it is general purpose, lightweight, optimised for most android apps
    HttpClient (Apache class, older and will support Android Froyo and below)

  Both support:
    HTTPS, streaming uploads and downloads, configurable time outs
    IPV-6, and connection pooling

  For more information:
    training guide:
      https://developer.android.com/training/basics/network-ops/connecting.html
    blog post:
      http://android-developers.blogspot.co.uk/2011/09/androids-http-clients.html
  NOTE: both are oldish, have a look at Voley API for android:
    https://www.youtube.com/watch?v=yhv8l9F44qo

Logcat
  This is a debugging tool (similar to output onto command line)
    Displays text you place from:
      Log.e("PlaceholderFragment", "Error closing stream", e);
    They log error messages

  With ADB command line tool (and device plugged in)
    type in the app directory: adb logcat
      Will show all debug and error messages printed into logcat
  Also can see logs using Android Studio
    Click on green Android button ("Android Device Monitor")
    Then click on logcat tab to see log messages

Determining log level
  When using log to print errors, need to determine what log level it should be displayed at:
  Log levels and their java code:
    Error - kept during runtime, Log.e(String tag, String message)
    Warn - kept during runtime, log.w(String tag, String message)
    Info - kept during runtime, Log.i(String tag, String message)
    Debug - Compiled in, but stripped during runtime, Log.d(String tag, String message)
    Verbose - should never be compiled into app, except for development Log.v(String tag, String message)

  Parameters for log (String tag, String message)
    String tag = log tag, any String you want to identify log message
      Good practice to define log tag as a CONSTANT in your class (name of class or App)
    String message = actual log message you want to display

    PRO TIP: avoid log spam!!!
